{
  "hash": "d732809eba897d0d6c5ffebc1c14829b",
  "result": {
    "markdown": "---\ntitle: \"Chapter 3\"\nformat: html\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n# Random Numbers\n\n## 3.1 Pseudorandom number generation\n\n### Multiplicative Congruential Method\n\nAlso known as a [Lehmer random number generator](https://en.wikipedia.org/wiki/Lehmer_random_number_generator).\n\n$$\nx_n = a x_{n-1} \\,\\text{mod}\\, m\n$$\n\nThe limits on the parameters are: $0 < x_0 <m$\n\nIf we use the values\n\n-   $a = 2$\n-   $m = 7$\n-   $x_0 = 6$\n\nWe have:\n\n|                $X$                 |\n|:----------------------------------:|\n|              $x_0=6$               |\n| $x_1=5=2 \\cdot 6 \\;\\text{mod}\\; 7$ |\n| $x_2=3=2 \\cdot 5 \\;\\text{mod}\\; 7$ |\n| $x_3=6=2 \\cdot 3 \\;\\text{mod}\\; 7$ |\n: Fruit prices {tbl-colwidths=\"[75]\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmulcm <- function(a, m, seed, iterations = 1) {\n  # m <- 150\n  # a <- 3\n  # seed <- 5\n  # iterations <- 3\n  counter <- 1\n  \n  temp_val <- seed\n  output_vector <- c(temp_val)\n  while(counter <= iterations){\n    temp_val <- a * temp_val %% m\n    output_vector <- c(output_vector, temp_val)\n    counter <- counter + 1\n  }\n  output_vector\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmulcm(3, 150, 5, iterations = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]   5  15  45 135 405 315  45 135 405 315  45\n```\n:::\n:::\n\n\n#### Mixed Congruential Method\n\n[Linear congruential generator](https://en.wikipedia.org/wiki/Linear_congruential_generator) (LCG):\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}