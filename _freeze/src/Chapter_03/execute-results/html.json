{
  "hash": "a62fb7bb564ae144ec0959c0ace00980",
  "result": {
    "markdown": "---\ntitle: \"Chapter 3\"\nformat: html\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n# Numerical Integration\n\n\n\n# Random Numbers\n\n## 3.1 Pseudorandom number generation\n\n### Multiplicative Congruential Method\n\nAlso known as a [Lehmer random number generator](https://en.wikipedia.org/wiki/Lehmer_random_number_generator).\n\n$$\nx_n = a x_{n-1} \\,\\text{mod}\\, m\n$$\n\nThe limits on the parameters are: $0 < x_0 <m$\n\nIf we use the values\n\n-   $a = 2$\n-   $m = 7$\n-   $x_0 = 6$\n\nWe have:\n\n|                $X$                 |\n|:----------------------------------:|\n|              $x_0=6$               |\n| $x_1=5=2 \\cdot 6 \\;\\text{mod}\\; 7$ |\n| $x_2=3=2 \\cdot 5 \\;\\text{mod}\\; 7$ |\n| $x_3=6=2 \\cdot 3 \\;\\text{mod}\\; 7$ |\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlehmer.seq <- function(x0, a, m, iterations = 1) {\n  counter <- 1\n  temp_val <- x0\n  output_vector <- c(temp_val)\n  while(counter <= iterations){\n    temp_val <- (a * temp_val) %% m\n    output_vector <- c(output_vector, temp_val)\n    counter <- counter + 1\n  }\n  output_vector\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#lehmer.rng()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlehmer.seq(x0=6, a=2, m=7, iterations = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 6 5 3 6 5 3 6 5 3 6 5\n```\n:::\n:::\n\n\n#### Mixed Congruential Method\n\n[Linear congruential generator](https://en.wikipedia.org/wiki/Linear_congruential_generator) (LCG):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlcg.rng <- function(x0, a, c, m, iterations = 1) {\n  counter <- 1\n  temp_val <- x0\n  output_vector <- c(temp_val)\n  while(counter < iterations){\n    temp_val <- (a * temp_val + c) %% m\n    output_vector <- c(output_vector, temp_val)\n    counter <- counter + 1\n  }\n  output_vector\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlcg.rng(x0=3, a=5, c=7, m=200)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#lcg(1)\n```\n:::\n\n\n## 3.2 Using Random numbers to Evaluate Integrals\n\n",
    "supporting": [
      "Chapter_03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}